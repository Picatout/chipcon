; ccasm formal syntax
; character set ASCII
; '*' 0 or more
; '+' 1 or more
; '[]' grouping
; '()' optional
; '|' alternative

source_code ::= instruction_line*
insttruction_line ::= mnemonic_instruction|directive_instruction|label
mnemonic_instruction ::= sep* (label) sep+ mnemonic (mneno_arg_list) 
mnemonic_arg_list ::= mnemo_arg|mmeno_arg [sep+ ',' sep+ mnemo_arg]*
mnemo_arg ::= register|expression
directive_instruction ::= sep* directive dir_arg_list*
dir_arg_list ::= dir_arg|dir_arg [sep+ ',' sep+ dir_arg]*
dir_arg ::= string|expression
expression ::= term|expression['+'|'-']term
term ::= factor|term['*'|'/'|'%']factor
factor ::= constant|'('expression')'
constant ::= number|contant_symbol
contant_symbol ::= 'EQU' identifier expression  ; constant_symbol must be defined before being referenced
number ::=  decimal|hexadecimal|binary
identifier ::=letter[letter|digit|'_']*
label ::= identifier':'
string ::= '"'ascii'"'
decimal ::= digit+
hexadecimal ::= '#'hex_digit+
binary ::= '$'['1'|'0'|'.']+
digit ::= ['0'..'9']
hex_digit ::=  ['0'..'9''A'..'F']
letter ::= ['A'..'Z']
sep ::= ' '|'\t'
ascii ::= ASCII set between [32-127]
register ::= 'V[hex_digit]'|'R'|'DT'|'ST'|'I'|'[''I'']'

mnemonic ::= 'SCD'|'CLS'|'RET'|'SCR'|'SCL'|'EXIT'|'LOW'|'HIGH'|'JP'|'CALL'|
			 'SE'|'SNE'|'LD'|'ADD'|'OR'|'AND'|'XOR'|'SUB'|'SHR'|'SUBN'|'SHL'|
			 'RND'|'DRW'|'TONE'|'PRT'|'SKP'|'SKNP'

directive ::= 'DB'|'DW'|'ASCII'|'EQU'


			
			
